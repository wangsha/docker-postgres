- name: Ensure docke volume mapping host directories exist
  file:
    state: directory
    path: "{{ item | regex_replace('^(?P<host>.+):(?P<container>.+):(?P<mode>.+)', '\\g<host>') }}"
  with_items:
    - "{{ docker_postgres_directory_volumes }}"
  tags:
    - install
    - upgrade


- name: Ensure docker volume mapping host file directories exist
  file:
    state: directory
    path: "{{ item | regex_replace('^(?P<host>.+):(?P<container>.+):(?P<mode>.+)', '\\g<host>') | dirname }}"
  with_items:
    - "{{ docker_postgres_file_volumes }}"
  tags:
    - install
    - upgrade

- name: Copy docker volume mapping host file
  template:
    src="{{ docker_postgres_template_path }}{{ item | regex_replace('^(?P<host>.+):(?P<container>.+):(?P<mode>.+)', '\\g<host>') | basename }}.j2"
    dest="{{ item | regex_replace('^(?P<host>.+):(?P<container>.+):(?P<mode>.+)', '\\g<host>') }}"
    mode='0644'
  with_items:
    - "{{ docker_postgres_file_volumes }}"
  tags:
    - install
    - upgrade

- name: Run docker postgres container
  docker:
    docker_api_version: "{{ docker_api_version }}"
    env: "{{ docker_postgres_env }}"
    expose: "{{ docker_postgres_expose }}"
    image: "{{ docker_postgres_image }}"
    links: "{{ docker_postgres_links }}"
    volumes: "{{ docker_postgres_volumes }}"
    memory_limit: "{{ docker_postgres_memory_limit }}"
    name: "{{ docker_postgres_name }}"
    ports: "{{ docker_postgres_ports }}"
    log_driver: "{{ docker_postgres_log_driver }}"
    log_opt: "{{ docker_postgres_log_opt }}"
    pull: always
    restart_policy: always
    state: reloaded
    volumes: "{{ docker_postgres_volumes }}"
  tags:
    - install
    - upgrade
